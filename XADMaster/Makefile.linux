# Lets roll our own makefile, with blackjack and hookers [because GNUSteps sucks.



# Compilers and linkers

OBJCC = gcc
CC = gcc
CPP = g++
LD = g++



# Options for compilation

GNUSTEP_OPTS =	-DGNUSTEP \
		-DGNU_RUNTIME=1 \
		-D_NATIVE_OBJC_EXCEPTIONS \
		-fgnu-runtime \
		-fexceptions \
		-fobjc-exceptions \
		-fconstant-string-class=NSConstantString

GCC_OPTS = 	-c \
		-O2 \
		-Wno-import \
		-Wno-multichar \
		-g \
		-D_FILE_OFFSET_BITS=64 \
		-isystem /usr/include/GNUstep

OBJC_OPTS =	-std=gnu99

C_OPTS =	-std=gnu99

CXX_OPTS =

OBJCFLAGS = $(OBJC_OPTS) $(GCC_OPTS) $(GNUSTEP_OPTS)
CFLAGS = $(C_OPTS) $(GCC_OPTS)
CXXFLAGS = $(CXX_OPTS) $(GCC_OPTS)



# Options for linking

LIBS =	-lgnustep-base \
	-lcrypto \
	-lbz2 \
	-lobjc \
	-lm

LDFLAGS =	-fexceptions \
		-fgnu-runtime



# Files for compilation

OBJC_FILES =	CarrylessRangeCoder.m \
		Checksums.m \
		CRC.m \
		CSBlockStreamHandle.m \
		CSByteStreamHandle.m \
		CSBzip2Handle.m \
		CSFileHandle.m \
		CSHandle.m \
		CSHexDump.m \
		CSInputBuffer.m \
		CSMemoryHandle.m \
		CSMultiHandle.m \
		CSStreamHandle.m \
		CSSubHandle.m \
		CSZlibHandle.m \
		NSDateXAD.m \
		NumberParsing.m \
		PPMdContext.m \
		PPMdSubAllocatorBrimstone.m \
		PPMdSubAllocatorVariantG.m \
		PPMdSubAllocatorVariantH.m \
		PPMdSubAllocatorVariantI.m \
		PPMdVariantG.m \
		PPMdVariantH.m \
		PPMdVariantI.m \
		Progress.m \
		StuffItXUtilities.m \
		XAD7ZipBCJ2Handle.m \
		XAD7ZipBranchHandles.m \
		XAD7ZipParser.m \
		XADALZipParser.m \
		XADArchiveParser.m \
		XADARJFastestHandle.m \
		XADARJParser.m \
		XADBinHexParser.m \
		XADBlockHandle.m \
		XADBzip2Parser.m \
		XADCABBlockHandle.m \
		XADCABBlockReader.m \
		XADCABParser.m \
		XADCFBFParser.m \
		XADChecksumHandle.m \
		XADCompactProLZHHandle.m \
		XADCompactProParser.m \
		XADCompactProRLEHandle.m \
		XADCompressHandle.m \
		XADCompressParser.m \
		XADCpioParser.m \
		XADCRCHandle.m \
		XADCRCSuffixHandle.m \
		XADDeflateHandle.m \
		XADDeltaHandle.m \
		XADDigestHandle.m \
		XADDiskDoublerADnHandle.m \
		XADDiskDoublerDDnHandle.m \
		XADDiskDoublerParser.m \
		XADException.m \
		XADFastLZSSHandle.m \
		XADGzipParser.m \
		XADLArcHandles.m \
		XADLibXADIOHandle.m \
		XADLibXADParser.m \
		XADLZHDynamicHandle.m \
		XADLZHOldHandles.m \
		XADLZHParser.m \
		XADLZHSFXParsers.m \
		XADLZHStaticHandle.m \
		XADLZMA2Handle.m \
		XADLZMAAloneParser.m \
		XADLZMAHandle.m \
		XADLZSSHandle.m \
		XADLZXHandle.m \
		XADLZXParser.m \
		XADMacArchiveParser.m \
		XADMacBinaryParser.m \
		XADMSLZXHandle.m \
		XADMSZipHandle.m \
		XADNDSParser.m \
		XADNowCompressParser.m \
		XADNSAParser.m \
		XADNSISBzip2Handle.m \
		XADNSISParser.m \
		XADPackItParser.m \
		XADPath.m \
		XADPowerPackerParser.m \
		XADPPMdHandles.m \
		XADPPMdParser.m \
		XADPrefixCode.m \
		XADQuantumHandle.m \
		XADRARAESHandle.m \
		XADRARCrypt20Handle.m \
		XADRAR20Handle.m \
		XADRAR30Handle.m \
		XADRAR30Filter.m \
		XADRARParser.m \
		XADRARVirtualMachine.m \
		XADRC4Handle.m \
		XADRegex.m \
		XADRPMParser.m \
		XADSARParser.m \
		XADSkipHandle.m \
		XADSplitFileParser.m \
		XADString.m \
		XADStuffIt13Handle.m \
		XADStuffIt5Parser.m \
		XADStuffItArsenicHandle.m \
		XADStuffItHuffmanHandle.m \
		XADStuffItOldHandles.m \
		XADStuffItParser.m \
		XADStuffItRLEHandle.m \
		XADStuffItXBlendHandle.m \
		XADStuffItXBlockHandle.m \
		XADStuffItXCyanideHandle.m \
		XADStuffItXDarkhorseHandle.m \
		XADStuffItXEnglishHandle.m \
		XADStuffItXIronHandle.m \
		XADStuffItXParser.m \
		XADTarParser.m \
		XADTarSparseHandle.m \
		XADUnarchiver.m \
		XADWinZipAESHandle.m \
		XADXARParser.m \
		XADXORHandle.m \
		XADXZHandle.m \
		XADXZParser.m \
		XADZipCryptHandle.m \
		XADZipImplodeHandle.m \
		XADZipParser.m \
		XADZipSFXParsers.m \
		XADZipShrinkHandle.m \
		../BadLicense/XADRAROfficialHandle.m \
		../UniversalDetector/UniversalDetector.m

C_FILES =	BWT.c \
		LZSS.c \
		LZW.c \
		RARBug.c \
		RARVirtualMachine.c \
		libxad/all.c \
		libxad/clients.c \
		libxad/unix/emulation.c \
		libxad/unix/init.c \
		lzma/LzmaDec.c \
		lzma/BraIA64.c \
		lzma/Bra86.c \
		lzma/Bra.c \
		lzma/Lzma2Dec.c \
		../UniversalDetector/universalchardet/kludge.c

CXX_FILES =	../BadLicense/RARUnpacker.cpp \
		../BadLicense/unrar/getbits.cpp \
		../BadLicense/unrar/rarvm.cpp \
		../BadLicense/unrar/unpack.cpp \
		../UniversalDetector/WrappedUniversalDetector.cpp \
		../UniversalDetector/universalchardet/CharDistribution.cpp \
		../UniversalDetector/universalchardet/JpCntx.cpp \
		../UniversalDetector/universalchardet/LangBulgarianModel.cpp \
		../UniversalDetector/universalchardet/LangCyrillicModel.cpp \
		../UniversalDetector/universalchardet/LangGreekModel.cpp \
		../UniversalDetector/universalchardet/LangHebrewModel.cpp \
		../UniversalDetector/universalchardet/LangHungarianModel.cpp \
		../UniversalDetector/universalchardet/LangThaiModel.cpp \
		../UniversalDetector/universalchardet/nsBig5Prober.cpp \
		../UniversalDetector/universalchardet/nsCharSetProber.cpp \
		../UniversalDetector/universalchardet/nsEscCharsetProber.cpp \
		../UniversalDetector/universalchardet/nsEscSM.cpp \
		../UniversalDetector/universalchardet/nsEUCJPProber.cpp \
		../UniversalDetector/universalchardet/nsEUCKRProber.cpp \
		../UniversalDetector/universalchardet/nsEUCTWProber.cpp \
		../UniversalDetector/universalchardet/nsGB2312Prober.cpp \
		../UniversalDetector/universalchardet/nsHebrewProber.cpp \
		../UniversalDetector/universalchardet/nsLatin1Prober.cpp \
		../UniversalDetector/universalchardet/nsMBCSGroupProber.cpp \
		../UniversalDetector/universalchardet/nsMBCSSM.cpp \
		../UniversalDetector/universalchardet/nsSBCharSetProber.cpp \
		../UniversalDetector/universalchardet/nsSBCSGroupProber.cpp \
		../UniversalDetector/universalchardet/nsSJISProber.cpp \
		../UniversalDetector/universalchardet/nsUniversalDetector.cpp \
		../UniversalDetector/universalchardet/nsUTF8Prober.cpp

MAIN_FILES =	XADTest2.m \
		XADTest3.m \
		XADTest4.m \
		unar.m

EXECUTABLE_FILES =	XADTest2 \
			XADTest3 \
			XADTest4 \
			unar

SOURCE_FILES = $(OBJC_FILES) $(C_FILES) $(CPP_FILES) $(MAIN_FILES)

OBJC_OBJS=$(OBJC_FILES:.m=.o)

C_OBJS=$(C_FILES:.c=.o)

CXX_OBJS=$(CXX_FILES:.cpp=.o)

MAIN_OBJS=$(MAIN_FILES:.m=.o)

OBJS = $(OBJC_OBJS) $(C_OBJS) $(CXX_OBJS)





# Suffix rules

.SUFFIXES: .o .m .c

.m.o:
	$(OBJCC) $(OBJCFLAGS) $< -o $@	

.c.o:
	$(CC) $(CFLAGS) $< -o $@

.cpp.o:
	$(CXX) $(CXXFLAGS) $< -o $@



# Compilation rules

all: unar XADTest2 XADTest3 XADTest4

unar: unar.o $(OBJS)
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS)

XADTest2: XADTest2.o $(OBJS)
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS)

XADTest3: XADTest3.o $(OBJS)
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS)

XADTest4: XADTest4.o $(OBJS)
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS)

clean:
	rm -f 	$(OBJS) \
		$(MAIN_OBJS) \
		$(EXECUTABLE_OBJS) \
		*~ \
		lzma/*~ \
		unrar/*~ \
		../UniversalDetector/*~ \
		../UniversalDetector/universalchardet/*~

depend:
	$(OBJCC) -MM $(OBJCFLAGS) $(OBJC_FILES) $(MAIN_FILES) >Makefile.dependtmp
	$(CC) -MM $(CFLAGS) $(C_FILES) >>Makefile.dependtmp
	$(CXX) -MM $(CXXFLAGS) $(CXX_FILES) >>Makefile.dependtmp
	sed 's/.*: *\([^ ]*\)\.\([^ ]*\)/\1.o: \1.\2/g' <Makefile.dependtmp >Makefile.depend
	rm Makefile.dependtmp

include Makefile.depend

