# Compilers and linkers

OBJCC = gcc
CC = gcc
CXX = g++
LD = gcc
AR = ar

# Options for compilation

GCC_OPTS =	-O2 -v \
		-Wno-import \
		-Wno-multichar

OBJC_OPTS =	-std=gnu99

C_OPTS =	-std=gnu99

CXX_OPTS =

AUTODEPENDENCY_CFLAGS=-MMD -MF$(@:.o=.d) -MT$@

ALL_OBJCFLAGS = $(OBJC_OPTS) $(GCC_OPTS) $(OBJCFLAGS) $(AUTODEPENDENCY_CFLAGS)
ALL_CFLAGS = $(C_OPTS) $(GCC_OPTS) $(CFLAGS) $(AUTODEPENDENCY_CFLAGS)
ALL_CXXFLAGS = $(CXX_OPTS) $(GCC_OPTS) $(CXXFLAGS) $(AUTODEPENDENCY_CFLAGS)

# Options for linking

LIBS =	-framework Foundation \
	-framework Carbon \
	-lcrypto \
	-lz \
	-lbz2 \
	-lobjc \
	-lstdc++ \
	-lm

ALL_LDFLAGS =	-ObjC \
		$(LDFLAGS)

FRAMEWORK_LDFLAGS =	-dynamiclib \
			-install_name @executable_path/../Frameworks \
			-F../UniversalDetector \
			-framework UniversalDetector \
			$(LDFLAGS)

# Paths

SOURCE_DIR = .
BUILD_DIR = Build

# Files

PLATFORM_OBJC_FILES =	XADPlatformMacOSX.m \
			XADStringCFString.m

include Makefile.common

# Framework

FRAMEWORK_NAME = XADMaster

FRAMEWORK_FILES = $(FRAMEWORK_NAME).framework

FRAMEWORK_HEADER_FILES =	$(shell grep -i Public $(FRAMEWORK_NAME).xcodeproj/project.pbxproj |\
				perl -pe 's!^.*/\*\s*(.+\.h).*$$!$$1!g' |\
				grep -v xadmaster)


# Compilation rules

all: $(FRAMEWORK_FILES) $(EXECUTABLE_FILES) $(LIBRARY_FILES)

$(FRAMEWORK_NAME).framework: \
$(FRAMEWORK_NAME).framework/Versions/A/$(FRAMEWORK_NAME) \
$(FRAMEWORK_NAME).framework/Versions/A/Resources/Info.plist \
$(FRAMEWORK_NAME).framework/Versions/A/Resources/en.lproj/InfoPlist.strings \
$(FRAMEWORK_HEADER_FILES:%=$(FRAMEWORK_NAME).framework/Versions/A/Headers/%)
	ln -sf A $(FRAMEWORK_NAME).framework/Versions/Current
	ln -sf Versions/Current/$(FRAMEWORK_NAME) $(FRAMEWORK_NAME).framework/$(FRAMEWORK_NAME)
	ln -sf Versions/Current/Resources $(FRAMEWORK_NAME).framework/Resources
	ln -sf Versions/Current/Headers $(FRAMEWORK_NAME).framework/Headers

$(FRAMEWORK_NAME).framework/Versions/A/$(FRAMEWORK_NAME): $(LIBRARY_OBJS)
	make -C ../UniversalDetector -f Makefile.legacy
	@mkdir -p $(dir $@)
	$(LD) $(FRAMEWORK_LDFLAGS) -o $@ $^ $(LIBS)

$(FRAMEWORK_NAME).framework/Versions/A/Resources/Info.plist: Info.plist
	@mkdir -p $(dir $@)
	cat $^ |\
	perl -pe 's/\$$\{EXECUTABLE_NAME\}/$(FRAMEWORK_NAME)/sge' |\
	perl -pe 's/\$$\{PRODUCT_NAME\}/$(FRAMEWORK_NAME)/sge' |\
	cat >$@

$(FRAMEWORK_NAME).framework/Versions/A/Resources/en.lproj/InfoPlist.strings: English.lproj/InfoPlist.strings
	@mkdir -p $(dir $@)
	cp $^ $@

$(FRAMEWORK_NAME).framework/Versions/A/Headers/%: %
	@mkdir -p $(dir $@)
	cp $^ $@

libXADMaster.a: $(LIBRARY_OBJS)
	rm -f $@
	$(AR) rcs $@ $^

../UniversalDetector/libUniversalDetector.a:
	make -C ../UniversalDetector -f Makefile.legacy

XADTest2: $(XADTEST2_OBJS) libXADMaster.a ../UniversalDetector/libUniversalDetector.a
	$(LD) $(ALL_LDFLAGS) -o $@ $^ $(LIBS)

XADTest3: $(XADTEST3_OBJS) libXADMaster.a ../UniversalDetector/libUniversalDetector.a
	$(LD) $(ALL_LDFLAGS) -o $@ $^ $(LIBS)

XADTest4: $(XADTEST4_OBJS) libXADMaster.a ../UniversalDetector/libUniversalDetector.a
	$(LD) $(ALL_LDFLAGS) -o $@ $^ $(LIBS)

XADTest5: $(XADTEST5_OBJS) libXADMaster.a ../UniversalDetector/libUniversalDetector.a
	$(LD) $(ALL_LDFLAGS) -o $@ $^ $(LIBS)

XADTest6: $(XADTEST6_OBJS) $(CMDLINE_OBJS) libXADMaster.a ../UniversalDetector/libUniversalDetector.a
	$(LD) $(ALL_LDFLAGS) -o $@ $^ $(LIBS)

unar: $(UNAR_OBJS) $(CMDLINE_OBJS) libXADMaster.a ../UniversalDetector/libUniversalDetector.a
	$(LD) $(ALL_LDFLAGS) -o $@ $^ $(LIBS)

lsar: $(LSAR_OBJS) $(CMDLINE_OBJS) libXADMaster.a ../UniversalDetector/libUniversalDetector.a
	$(LD) $(ALL_LDFLAGS) -o $@ $^ $(LIBS)

clean:
	rm -rf $(BUILD_DIR) XADMaster.framework $(EXECUTABLE_FILES) $(LIBRARY_FILES)
	make -C ../UniversalDetector -f Makefile.linux clean

# Suffix rules

.SUFFIXES: .o .c .m .cpp

$(BUILD_DIR)/%.o: $(SOURCE_DIR)/%.c
	@mkdir -p $(dir $@)
	$(CC) $(ALL_CFLAGS) $(AUTODEPENDENCY_CFLAGS) -c $< -o $@

$(BUILD_DIR)/%.o: $(SOURCE_DIR)/%.m
	@mkdir -p $(dir $@)
	$(OBJCC) $(ALL_OBJCFLAGS) $(AUTODEPENDENCY_CFLAGS) -c $< -o $@

$(BUILD_DIR)/%.o: $(SOURCE_DIR)/%.cpp
	@mkdir -p $(dir $@)
	$(CXX) $(ALL_CXXFLAGS) $(AUTODEPENDENCY_CFLAGS) -c $< -o $@

-include $(OBJS:.o=.d)
